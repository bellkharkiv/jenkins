node {
    try {
        notifyBuild('STARTED')

        stage('Docker stop containers') {
          sh 'docker ps -q | xargs --no-run-if-empty docker stop'
        }

        stage('Cleaning unused docker files') {
          sh 'docker ps -q -a | xargs --no-run-if-empty docker rm --force --volumes'
        }

        stage('Delete Docker images') {
          sh 'docker images -a -q | xargs --no-run-if-empty docker rmi -f'
        }

    } catch (e) {
      currentBuild.result = "FAILED"
      throw e
    } finally {
      // Success or failure, always send notifications
      notifyBuild(currentBuild.result)
    }
}

def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful. https://www.jenkins.io/blog/2016/07/18/pipeline-notifications/
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

slackSend (color: colorCode, message: summary)
}
